{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/koiketakuma/Documents/GitHub/rehabili-management-system/app/api/users/route.ts"],"sourcesContent":["// app/api/users/route.ts\nimport { Database } from 'sqlite3';\nimport path from 'path';\n\n// SQLite データベースファイルを指定\nconst dbPath = path.resolve(process.cwd(), 'database.sqlite');\nconst db = new Database(dbPath);\n\nexport async function GET(request: Request) {\n  return new Promise<Response>((resolve, reject) => {\n    db.all('SELECT * FROM users', [], (err, rows) => {\n      if (err) {\n        reject(new Response(JSON.stringify({ error: 'Database error' }), { status: 500 }));\n      } else {\n        resolve(new Response(JSON.stringify(rows), { status: 200, headers: { 'Content-Type': 'application/json' } }));\n      }\n    });\n  });\n}\n\nexport async function POST(request: Request) {\n  const { username, email } = await request.json();\n  return new Promise<Response>((resolve, reject) => {\n    db.run(\n      'INSERT INTO users (username, email) VALUES (?, ?)',\n      [username, email],\n      function (err) {\n        if (err) {\n          reject(new Response(JSON.stringify({ error: 'Database error' }), { status: 500 }));\n        } else {\n          resolve(\n            new Response(\n              JSON.stringify({ id: this.lastID, username, email }),\n              { status: 201, headers: { 'Content-Type': 'application/json' } }\n            )\n          );\n        }\n      }\n    );\n  });\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;AAEzB;;;AAEA,uBAAuB;AACvB,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI;AAC3C,MAAM,KAAK,IAAI,SAAS;AAEjB,eAAe,IAAI,OAAgB;IACxC,OAAO,IAAI,QAAkB,CAAC,SAAS;QACrC,GAAG,GAAG,CAAC,uBAAuB,EAAE,EAAE,CAAC,KAAK;YACtC,IAAI,KAAK;gBACP,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAAiB,IAAI;oBAAE,QAAQ;gBAAI;YACjF,OAAO;gBACL,QAAQ,IAAI,SAAS,KAAK,SAAS,CAAC,OAAO;oBAAE,QAAQ;oBAAK,SAAS;wBAAE,gBAAgB;oBAAmB;gBAAE;YAC5G;QACF;IACF;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;IAC9C,OAAO,IAAI,QAAkB,CAAC,SAAS;QACrC,GAAG,GAAG,CACJ,qDACA;YAAC;YAAU;SAAM,EACjB,SAAU,GAAG;YACX,IAAI,KAAK;gBACP,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAAiB,IAAI;oBAAE,QAAQ;gBAAI;YACjF,OAAO;gBACL,QACE,IAAI,SACF,KAAK,SAAS,CAAC;oBAAE,IAAI,IAAI,CAAC,MAAM;oBAAE;oBAAU;gBAAM,IAClD;oBAAE,QAAQ;oBAAK,SAAS;wBAAE,gBAAgB;oBAAmB;gBAAE;YAGrE;QACF;IAEJ;AACF"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}